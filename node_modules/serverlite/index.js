
"use strict";

const http = require("http");
const winston = require("winston");

function return_error_as_json( err, res, code, optional_massage){
    winston.error(`SERVERLITE:  An error occured in http request.  ${optional_massage}. Error Object follows...`);
    winston.error(err);
    res.writeHead( code, {"Content-Type": "application/json"});
    res.write(JSON.stringify({
        error: err
    }));
    res.end();
}

module.exports = function( port, callback) {
    return http.createServer(function(req, res, next ) {

        let body = [];
        let data = {};

        req.on("error", function(err) {
            return_error_as_json(res, 500);
        }).on("data", function(chunk) {
            body.push(chunk);
        }).on("end", function() {

            winston.info("SERVERLITE: Incomming request");

            body = Buffer.concat(body).toString("ascii");

            if ( !body || body.length === 0 ) {
                return_error_as_json(err, res, 401,"Required body not supplied");
            } else {

                try {
                    winston.info("SERVERLITE: Parsing incoming body begin");
                    winston.info(body);
                    data = JSON.parse(body);
                    winston.info("SERVERLITE: Parsing incoming body end");

                    req.body = data;

                    process.nextTick( callback.bind({}, req, res, next ) );

                } catch(err){
                    return_error_as_json(err, res, 401, "Failed to parse body");
                }
            }



        });

    }).listen( port, function(){
        winston.log("info",`Serverlite worker listening on port ${port}`);
    });
};